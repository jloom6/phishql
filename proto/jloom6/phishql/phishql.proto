syntax = "proto3";
option go_package = "phishqlpb";
package jloom6.phishql;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service PhishQLService {
    rpc GetShows(GetShowsRequest) returns (GetShowsResponse) {
        option (google.api.http) = {
			post: "/v1/shows"
			body: "*"
		};
    }

    rpc GetArtists(GetArtistsRequest) returns (GetArtistsResponse) {
        option (google.api.http) = {
			post: "/v1/artists"
			body: "*"
		};
    }

    rpc GetSongs(GetSongsRequest) returns (GetSongsResponse) {
        option (google.api.http) = {
			post: "/v1/songs"
			body: "*"
		};
    }

    rpc GetTags(GetTagsRequest) returns (GetTagsResponse) {
        option (google.api.http) = {
			post: "/v1/tags"
			body: "*"
		};
    }

    rpc GetTours(GetToursRequest) returns (GetToursResponse) {
        option (google.api.http) = {
			post: "/v1/tours"
			body: "*"
		};
    }
}

message GetShowsRequest {
    Condition condition = 1;
}

message Condition {
    oneof condition {
        Conditions and = 1;
        Conditions or = 2;
        BaseCondition base = 3;
    }
}

message Conditions {
    repeated Condition conditions = 1;
}

message BaseCondition {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
    int32 day_of_week = 4; // Sunday = 1, Monday = 2, ..., Saturday = 7
    string city = 5;
    string state = 6;
    string country = 7;
    string song = 8;
}

message GetShowsResponse {
    repeated Show shows = 1;
}

message Show {
    int32 id = 1;
    google.protobuf.Timestamp date = 2;
    Artist artist = 3;
    Venue venue = 4;
    Tour tour = 5;
    string notes = 6;
    string soundcheck = 7;
    repeated Set sets = 8;
}

message Artist {
    int32 id = 1;
    string name = 2;
}

message Venue {
    int32 id = 1;
    string name = 2;
    string city = 3;
    string state = 4;
    string country = 5;
}

message Tour {
    int32 id = 1;
    string name = 2;
    string description = 3;
}

message Set {
    int32 id = 1;
    string label = 2;
    repeated SetSong songs = 3;
}

message SetSong {
    Song song = 1;
    Tag tag = 2;
    string transition = 3;
}

message Song {
    int32 id = 1;
    string name = 2;
}

message Tag {
    int32 id = 1;
    string text = 2;
}

message GetArtistsRequest {
}

message GetArtistsResponse {
    repeated Artist artists = 1;
}

message GetSongsRequest {
}

message GetSongsResponse {
    repeated Song songs = 1;
}

message GetTagsRequest {
}

message GetTagsResponse {
    repeated Tag tags = 1;
}

message GetToursRequest {
}

message GetToursResponse {
    repeated Tour tours = 1;
}
